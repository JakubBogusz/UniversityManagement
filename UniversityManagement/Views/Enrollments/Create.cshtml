@model UniversityManagement.Models.Enrollment

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>

    $(function () {
        $("#Student_FirstName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Enrollments/GetStudents",
                    dataType: "json",
                    type: "POST",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        console.log(data);
                        response($.map(data, function (item) {
                            return { label: item.Name, value: item.Name, id: item.Id };
                        }))
                    }
                });
            },
            minLength: 2,
            select: function (event, query) {
                console.log(query);
                $("#StudentID").val(query.item.id);
            }
        });
    });

    function Added(response) {
        if (response.IsSuccess) {
            $(function () {
                $("#failed").fadeOut('fast');
                $("#success").fadeIn('fast');
                //$('#success').append(response.Message);
            })
        }
        else {
            Failed(response);
        }
    }

    function Failed(response) {
        $(function () {
            $("#success").fadeOut('fast');
            $("#failed").fadeIn('fast');
        })
    }

</script>

<h2>Enrollment</h2>

@using (Ajax.BeginForm("AddStudent", "Enrollments", new AjaxOptions
{
    HttpMethod = "POST",
    OnSuccess = "Added",
    OnFailure = "Failure"
}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Enroll student to courses.</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div id="failed" class="alert alert-danger" style="display: none;">
            An Error occurred while adding student to the course.
        </div>
        <div id="success" class="alert alert-success" style="display: none;">
            Student added Successfully!
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseID, "Course Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CourseID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentID, "Student Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*<input type="text" id="StudentName" />*@
                @Html.EditorFor(model => model.Student.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.StudentID)
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.LecturerId, "LecturerId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("LecturerId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LecturerId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Enroll" class="btn btn-default" />
            </div>
        </div>
    </div>
}



<div>
    @Html.ActionLink("Back to List", "Index")
</div>
